import { type NextPage } from "next"
import Head from "next/head"
import Link from "next/link"
import { trpc } from "../utils/trpc"
import * as s from "../styles/styles"

const Home: NextPage = () => {
  const hello = trpc.example.hello.useQuery(
    { text: "from tRPC on Netlify" }
  )

  return (
    <>
      <Head>
        <title>Create T3 App on Netlify</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={s.appContainer}>
        <h1 className={s.title}>
          c<span className={s.purple}>t3</span>a netlify
        </h1>

        <p className={s.body}>This stack uses:</p>

        <div className={s.grid}>
          <TechnologyCard
            name="NextJS"
            description="The React framework for production"
            documentation="https://nextjs.org/"
          />
          <TechnologyCard
            name="TypeScript"
            description="Strongly typed programming language that builds on JavaScript, giving you better tooling at any scale"
            documentation="https://www.typescriptlang.org/"
          />
          <TechnologyCard
            name="TailwindCSS"
            description="Rapidly build modern websites without ever leaving your HTML"
            documentation="https://tailwindcss.com/"
          />
          <TechnologyCard
            name="tRPC"
            description="End-to-end typesafe APIs made easy"
            documentation="https://trpc.io/"
          />
          <TechnologyCard
            name="Netlify"
            description="Deployment for Next.js"
            documentation="https://docs.netlify.com/integrations/frameworks/next-js/overview/"
          />
          <TechnologyCard
            name="Prisma"
            description="Build data-driven JavaScript & TypeScript apps in less time"
            documentation="https://www.prisma.io/docs/"
          />
        </div>
        <div className={s.queryResponse}>
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div>
      </main>
    </>
  )
}

export default Home

type TechnologyCardProps = {
  name: string
  description: string
  documentation: string
}

const TechnologyCard: React.FC<TechnologyCardProps> = ({
  name,
  description,
  documentation,
}) => {
  return (
    <section className={s.cardSection}>
      <h2 className={s.cardTitle}>{name}</h2>
      <p className={s.cardDescription}>{description}</p>
      <Link
        className={s.link}
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Documentation
      </Link>
    </section>
  )
}